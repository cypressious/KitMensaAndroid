apply plugin: 'com.android.application'

android {

    signingConfigs {
        release {
            storeFile file('../motivkey.keystore')
        }
    }

    defaultConfig {
        applicationId 'com.cypressworks.mensaplan'
        minSdkVersion 21
        targetSdkVersion 36
        versionCode 35
        versionName "2.5.3"
    }

    compileSdk 36

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.txt'
        }
    }
    productFlavors {
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/services/javax.annotation.processing.Processor']
        }
    }


    namespace 'com.cypressworks.mensaplan'
    lint {
        disable 'InvalidPackage'
    }
    buildFeatures {
        buildConfig true
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'org.jsoup:jsoup:1.21.1'
    implementation files('libs/json-simple.jar')
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.3.0'
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:2.1.21"))
}

def props = new Properties()
def propFile = new File('signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
